# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Mao Build and Deploy Blog

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Mao Integrate resources
        run: git clone https://github.com/MaoJianwei/MaoJianwei.github.io-resources.git resources
      - name: Mao Integrate outside-resources
        run: git clone https://github.com/MaoJianwei/MaoJianwei.github.io-outside-resources.git outside-resources
        
      - name: Mao Show Directories of Source
        run: ls -al
      - name: Mao Show All Files of Source
        run: find
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Mao Show Directories of Product
        working-directory: ./_site/
        run: ls -al
      - name: Mao Show All Files Product
        working-directory: ./_site/
        run: find
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
